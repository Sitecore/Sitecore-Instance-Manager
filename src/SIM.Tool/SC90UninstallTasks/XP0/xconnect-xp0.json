{
  "Variables": {
    "Sql.Secure.Password": "[ConvertToSecureString(String:parameter('SqlAdminPassword'),AsPlainText:true,Force:true)]",
    "Sql.Credential": "[NewPSCredential(Username:parameter('SqlAdminUser'),Password:variable('SQL.Secure.Password'))]"
  },
  "Register": {
    "Tasks": {
      "RemoveItem": "Remove-Item",
      "RemoveSqlLogin": "Remove-SqlLogin"
    },
    "ConfigFunction": {
      "ConvertToSecureString": "ConvertTo-SecureString"
    }
  },
  "UninstallTasks": {
    "StopServices": {
      "Description": "Stops the services if they are running.",
      "Type": "ManageService",
      "Params": [
        {
          "Name": "[variable('Services.IndexWorker.Name')]",
          "Status": "Stopped",
          "PostDelay": 3000
        },
        {
          "Name": "[variable('Services.MarketingAutomationEngine.Name')]",
          "Status": "Stopped",
          "PostDelay": 3000
        }
      ]
    },
    "RemoveServices": {
      "Description": "Removes the services.",
      "Type": "RemoveService",
      "Params": [
        { "Name": "[variable('Services.IndexWorker.Name')]" },
        { "Name": "[variable('Services.MarketingAutomationEngine.Name')]" }
      ]
    },
    "StopWebsite": {
      "Description": "Stops the website if it is running.",
      "Type": "ManageWebsite",
      "Params": {
        "Name": "[parameter('SiteName')]",
        "Action": "Stop",
        "ErrorAction": "SilentlyContinue"
      }
    },
    "StopAppPool": {
      "Description": "Stops the app pool if it is running.",
      "Type": "ManageAppPool",
      "Params": {
        "Name": "[parameter('SiteName')]",
        "Action": "Stop",
        "ErrorAction": "SilentlyContinue"
      }
    },
    "RemoveAppPool": {
      "Description": "Removes the AppPool.",
      "Type": "RemoveAppPool",
      "Params": {
        "Name": "[parameter('SiteName')]"
      }
    },
    "RemoveWebsite": {
      "Description": "Removes the website.",
      "Type": "RemoveWebsite",
      "Params": {
        "Name": "[parameter('SiteName')]"
      }
    },
    "RemoveContent": {
      "Description": "Removes website content.",
      "Type": "RemoveItem",
      "Params": {
        "Path": "[variable('Site.PhysicalPath')]",
        "Recurse": true,
        "ErrorAction": "SilentlyContinue"
      }
    },
    "RemoveHostHeader": {
      "Description": "Removes the hostheader for the website.",
      "Type": "HostHeader",
      "Params": {
        "HostName": "[parameter('SiteName')]",
        "Action": "Remove"
      }
    },
    "RemoveDatabases": {
      "Description": "Removes the databases.",
      "Type": "RemoveSQLDatabase",
      "Params": {
        "ServerName": "[parameter('SqlServer')]",
        "Username": "[parameter('SqlAdminUser')]",
        "Password": "[variable('Sql.Secure.Password')]",
        "DatabaseName": [
          "[variable('Sql.Database.ShardMapManager')]",
          "[variable('Sql.Database.Shard0')]",
          "[variable('Sql.Database.Shard1')]",
          "[variable('Sql.Database.Pools')]",
          "[variable('Sql.Database.MarketingAutomation')]",
          "[variable('Sql.Database.Messaging')]",
          "[variable('Sql.Database.Reference')]"
        ]
      }
    },
    "Removelogin": {
      "Description": "Removes the sqlcollectionuser login from the database server.",
      "Type": "RemoveSQLLogin",
      "Params": {
        "LoginName": "[parameter('SqlCollectionUser')]",
        "ServerInstance": "[parameter('SqlServer')]",
        "Credential": "[variable('Sql.Credential')]",
        "Force": true,
        "ErrorAction": "SilentlyContinue"
      }
    }
  }
}